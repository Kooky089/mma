function(load_cmi cmakeit_URL)
  get_property(cmakeit_POPULATED GLOBAL PROPERTY cmakeit_POPULATED)
  if(NOT cmakeit_POPULATED)
    set(cmakeit_LOADER_REVISION 1)
    set(EXTERNALS_PATH "${CMAKE_SOURCE_DIR}/_externals/" CACHE PATH "")
    if(DEFINED cmakeit_URL_CURRENT AND NOT ("${cmakeit_URL}" STREQUAL "${cmakeit_URL_CURRENT}"))
      unset(cmakeit_PATH CACHE)
    endif()
    set(cmakeit_URL_CURRENT "${cmakeit_URL}" CACHE INTERNAL "")
    
    get_filename_component(cmakeit_ARCHIVE "${cmakeit_URL}" NAME)
    set(cmakeit_ARCHIVE_PATH "${EXTERNALS_PATH}/${cmakeit_ARCHIVE}" CACHE PATH "")
    get_filename_component(cmakeit_ARCHIVE_TAG "${cmakeit_ARCHIVE_PATH}" NAME_WE) 
    
    set(cmakeit_PATH "${EXTERNALS_PATH}/${cmakeit_ARCHIVE_TAG}" CACHE PATH "")
    if(NOT EXISTS "${cmakeit_PATH}")
      if(NOT EXISTS "${cmakeit_ARCHIVE_PATH}")
        message(STATUS "Downloading cmakeit")
        file(DOWNLOAD "${cmakeit_URL}" "${cmakeit_ARCHIVE_PATH}" SHOW_PROGRESS)
      endif()
      message(STATUS "Extracting cmakeit")
      execute_process(COMMAND "${CMAKE_COMMAND}" -E tar -xf "${cmakeit_ARCHIVE_PATH}" WORKING_DIRECTORY "${EXTERNALS_PATH}")
    endif()
    
    if(cmakeit_UPDATE)
      get_filename_component(cmakeit_LOADER "${CMAKE_CURRENT_LIST_FILE}" NAME)
      message(STATUS "cmakeit: Updating ${cmakeit_LOADER}")
      set(cmakeit_BACKUP "${CMAKE_CURRENT_LIST_FILE}")
      while(EXISTS "${cmakeit_BACKUP}")
        set(cmakeit_BACKUP "${cmakeit_BACKUP}.bak")
      endwhile()
      file(SHA1 "${cmakeit_PATH}/${cmakeit_LOADER}" HASH_DOWNLOAD)
      file(SHA1 "${CMAKE_CURRENT_LIST_FILE}" HASH_CURRENT)
      if("${HASH_DOWNLOAD}" STREQUAL "${HASH_CURRENT}")
        message(STATUS "cmakeit: Already up to date")
      else()
        message(STATUS "cmakeit: Createing backup ${cmakeit_BACKUP}")
        file(RENAME "${CMAKE_CURRENT_LIST_FILE}" "${cmakeit_BACKUP}")
        file(COPY "${cmakeit_PATH}/${cmakeit_LOADER}" DESTINATION "${CMAKE_CURRENT_LIST_DIR}")
      endif()
      message(STATUS "cmakeit: Update done")
    endif()
    
    if(EXISTS "${cmakeit_PATH}/cmi_include.cmake")
      include("${cmakeit_PATH}/cmi_include.cmake")
    endif()
    
    set(cmakeit_MODULEPATH "${cmakeit_PATH}/modules" CACHE INTERNAL "")
    set_property(GLOBAL PROPERTY cmakeit_POPULATED "TRUE")
  endif()
  set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${cmakeit_MODULEPATH}" PARENT_SCOPE)
endfunction()

