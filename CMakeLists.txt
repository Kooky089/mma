cmake_minimum_required(VERSION 2.8.12)
project(mma)

include(CheckLanguage)
enable_language (Fortran OPTIONAL)

# Don't use FindMPI when using MS Visual Studio
if (MSVC)
    if (NOT EXISTS $ENV{I_MPI_ROOT})
        message(FATAL_ERROR "Environment variable I_MPI_ROOT=$ENV{I_MPI_ROOT} is not set or invalid. You need to use IntelMPI when using MS Visual Studio.")
    endif()

    set (MPI_INCLUDE "$ENV{I_MPI_ROOT}\\intel64\\include")
    set (MPI_LIB "$ENV{I_MPI_ROOT}\\intel64\\lib\\release\\impi.lib")
    set (MPIEXEC "$ENV{I_MPI_ROOT}\\intel64\\bin\\mpiexec.exe")
    message(STATUS "I_MPI_ROOT: " $ENV{I_MPI_ROOT})
    message(STATUS "MPI_INCLUDE: " ${MPI_INCLUDE})
    message(STATUS "MPI_LIB: " ${MPI_LIB})
    message(STATUS "MPIEXEC: " ${MPIEXEC})
    if (CMAKE_Fortran_COMPILER)
        set(USE_Fortran true)
    endif()
    if (CMAKE_C_COMPILER)
        set(USE_C true)
    endif()
else()
    set (MPI_C_COMPILER ${CMAKE_C_COMPILER})
    set (MPI_Fortran_COMPILER ${CMAKE_Fortran_COMPILER})
    find_package(MPI)
    if (MPI_Fortran_FOUND)
        set(USE_Fortran true)
    else()
        message("The compiler ${CMAKE_Fortran_COMPILER} has no MPI support. All Fortran modules will be disabled.")
    endif()
    if (MPI_C_FOUND)
        set(USE_C true)
    else()
        message("The compiler ${CMAKE_C_COMPILER} has no MPI support. Use for example CC=mpicc cmake")
    endif()
endif(MSVC)

add_subdirectory(src)
add_subdirectory(examples)
enable_testing()
add_subdirectory(tests)
